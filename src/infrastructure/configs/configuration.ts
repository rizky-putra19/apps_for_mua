import { config } from 'dotenv';

export default () => ({
  port: parseInt(process.env.PORT, 10) || 3001,
  stage: process.env.STAGE || 'prd',
  appUrl: process.env.APP_URL || 'http://localhost:3001',
  apiUrl: process.env.API_URL || 'http://localhost:3001',

  database: {
    type: 'mysql',
    host: process.env.DB_HOST,
    port: Number.parseInt(process.env.DB_PORT as string, 10),
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    entities: [],
    autoLoadEntities: true,
    synchronize: process.env.NODE_ENV == 'dev',
    logging: ['error', 'migration', 'schema'],
    keepConnectionAlive: true,
    cache: {
      duration: process.env.QUERY_CACHE_DURATION || 3000,
      type: 'ioredis',
      options: {
        host: process.env.REDIS_HOST,
        port: Number.parseInt(process.env.REDIS_PORT as string, 10),
      },
    },
  },
  redis: {
    host: process.env.REDIS_HOST,
    port: Number.parseInt(process.env.REDIS_PORT as string, 10),
  },
  legacySecurity: {
    customerTokenSecret: process.env.CUSTOMER_TOKEN_SECRET,
    artisanTokenSecret: process.env.ARTISAN_TOKEN_SECRET,
    adminTokenSecret: process.env.ADMIN_TOKEN_SECRET,
  },
  notification: {
    providers: {
      onesignal: {
        appKey: 'OWZjM2I3ZTEtZjY1MC00NDk1LTkzNDYtYmFlNTJkNDI3NTZk',
        appId: {
          artisan:
            process.env.ARTISAN_DEVICE_ID ||
            '7085a592-37e6-4fc9-a7de-9e233e1b8afe',
          customer:
            process.env.CUSTOMER_DEVICE_ID ||
            'f3c96104-ddfc-4aa8-bfb4-bc2c6cc6ca28',
        },
      },
    },
  },
  legacyJwtSecret: process.env.LEGACY_JWT_SECRET,
  legacyApiBaseUrl: process.env.LEGACY_API_BASE_URL,
  challengerBaseUrl: process.env.CHALLENGER_BASE_URL,
  mailgunSecretKey: process.env.MAILGUN_SECRET_KEY,
  mailgunDomain: process.env.MAILGUN_DOMAIN,
  emailFrom: process.env.EMAIL_FROM || 'no-reply@beautybell.id',
  firebaseWebApiKey: process.env.FIREBASE_WEB_API_KEY,
  customerFirebaseDynamicLinkPrefix:
    process.env.CUSTOMER_FIREBASE_DYNAMIC_LINK_PREFIX,
  artisanFirebaseDynamicLinkPrefix:
    process.env.ARTISAN_FIREBASE_DYNAMIC_LINK_PREFIX,
  artisanAndroidPackageName: process.env.ARTISAN_ANDROID_PACKAGE_NAME,
  customerAndroidPackageName: process.env.CUSTOMER_ANDROID_PACKAGE_NAME,
  artisanIosPackageName: process.env.ARTISAN_IOS_PACKAGE_NAME,
  customerIosPackageName: process.env.CUSTOMER_IOS_PACKAGE_NAME,
  otpMaxRetry: process.env.OTP_MAX_RETRY,
  otpMaxValidationAttempt: process.env.OTP_MAX_VALIDATION_ATTEMPT,
  otpStepRequestTime: process.env.OTP_STEP_REQUEST_TIME,
  otpValidity: process.env.OTP_VALIDITY,
  mediaBucketName: process.env.MEDIA_BUCKET_NAME,
  appspotUrl: process.env.APPSPOT_URL,
  platformFee: process.env.PLATFORM_FEE,
  maksResponseTime: process.env.MAKS_RESPONSE_TIME,
  maksComplaintTime: process.env.MAKS_COMPLAINT_TIME,
  maksDaysRefund: process.env.MAKS_DAYS_REFUND,
  onHoldPaymentIn: process.env.ON_HOLD_PAYMENT_IN,
  onHoldPaymentOut: process.env.ON_HOLD_PAYMENT_OUT,
  refundedToCustomer: process.env.REFUNDED_TO_CUSTOMER,
  jwtPublicKey: process.env.JWT_PUBLIC_KEY,
  jwtPrivateKey: process.env.JWT_PRIVATE_KEY,
  jwtTokenExpirationTime: process.env.JWT_TOKEN_EXPIRATION_TIME,
  jwtRefreshTokenExpirationTime: process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME,
  http: {
    facebook: {},
    google: {
      clientIds: process.env.GOOGLE_CLIENT_IDS,
    },
  },
  payments: {
    providers: {
      xendit: {
        secretKey: process.env.XENDIT_SECRET_KEY,
        publicKey: process.env.XENDIT_PUBLIC_KEY,
        callbackToken: process.env.XENDIT_CALLBACK_TOKEN,
      },
    },
  },
  allowedPublicRoute: [
    '/adminRegister',
    '/artisanRegister',
    '/artisanLogin',
    '/customerRegister',
    '/customerLogin',
    '/checkEmail',
    '/checkUsername',
    '/bookingInvoiceStateUpdate',
    '/artisanCalendarAuthorize',
    '/disbursementStateUpdate',
    '/adminResetPasswordSend',
    '/adminResetPasswordResolve',
    '/artisanResetPasswordSend',
    '/artisanResetPasswordResolve',
    '/customerResetPasswordSend',
    '/customerResetPasswordResolve',
    '/adminResetPasswordResendView',
    '/adminResetPasswordFormView',
    '/adminResetPasswordResolveView',
    '/artisanResetPasswordResendView',
    '/artisanResetPasswordFormView',
    '/artisanResetPasswordResolveView',
    '/customerResetPasswordResendView',
    '/customerResetPasswordFormView',
    '/customerResetPasswordResolveView',
    '/adminVerifyEmailSend',
    '/adminVerifyEmailResolve',
    '/artisanVerifyEmailSend',
    '/artisanVerifyEmailResolve',
    '/customerVerifyEmailSend',
    '/customerVerifyEmailResolve',
    '/adminVerifyEmailResendView',
    '/adminVerifyEmailResolveView',
    '/artisanVerifyEmailResendView',
    '/artisanVerifyEmailResolveView',
    '/customerVerifyEmailResendView',
    '/customerVerifyEmailResolveView',
    '/adminEventLog',
    '/api/v1/categories',
  ],
});
